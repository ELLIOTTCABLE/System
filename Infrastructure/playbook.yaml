# code: language=ansible

 - name: Ensure non-root user and SSH are configured
   hosts: berit.ell.io

   # For newly-provisioned hosts, need to wait for sshd to come up
   gather_facts: false
   roles:
    - role: preroll
      tags: [preroll]
    - role: packages
    - role: ssh
    - role: password-quality
    - role: unattended-upgrades
    - role: firewall-tweaks
    - role: mail
    - role: clamav
    - role: rkhunter
    - role: auditd
    - role: lynis

 - name: Setup gaming servers
   tags: gaming
   hosts: berit.ell.io

   roles:
    - role: geerlingguy.docker
      become: true
    - role: space-engineers

   vars:
      docker_users:
       - "{{ user_name }}"

 - name: Setup windmill
   hosts: eurydice.ell.io

   gather_facts: false
   pre_tasks:
    - name: Wait for sshd on remote host to come up
      ansible.builtin.wait_for_connection:
         delay: 5
         timeout: 1800
    - name: Gather facts for the first time
      ansible.builtin.setup:

   roles:
    - role: preroll
    - role: aisbergg.acl
      become: true
    - role: geerlingguy.docker
      become: true
    - role: dokku_bot.ansible_dokku
      become: true
    - windmill

   vars:
      dokku_packages_state: latest
      dokku_hostname: with.ec
      dokku_manage_nginx: false
      server_domain: windmill.with.ec
      db_pass: "{{ lookup('env', 'DB_PASS') }}"
      db_host: "{{ lookup('env', 'DB_HOST') }}"
      db_port: "{{ lookup('env', 'DB_PORT') }}"
      db_name: "{{ lookup('env', 'DB_NAME') }}"
      db_url: "postgres://windmill_admin:{{ db_pass }}@{{ db_host }}:{{ db_port }}/{{ db_name }}"
      db_params:
         login_user: windmill_admin
         login_password: "{{ db_pass }}"
         login_host: "{{ db_host }}"
         login_port: "{{ db_port }}"
         db: "{{ db_name }}"
         # staging letsencrypt server:
         # caddy_letsencrypt_server: "https://acme-staging-v02.api.letsencrypt.org/directory"
      caddy_letsencrypt_email: "letsencrypt-automated@from.ec"

   module_defaults:
      community.postgresql.postgresql_ping: "{{ db_params }}"
      community.postgresql.postgresql_info: "{{ db_params }}"
      community.postgresql.postgresql_script: "{{ db_params }}"
