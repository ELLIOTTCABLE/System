# code: language=ansible

 - name: Print user IDs and port before user-fallback
   ansible.builtin.debug:
      verbosity: 1
      msg: |
         ansible_port: {{ ansible_port | d('unset') }};
         ansible_user: {{ ansible_user | d('unset') }};
         remote_user: {{ remote_user | d('unset') }}

 - name: Check for sshpass on local machine
   delegate_to: localhost
   register: sshpass_present
   ansible.builtin.raw: which sshpass
   check_mode: false
   changed_when: false
   failed_when: sshpass_present.rc > 0

 - name: Report if sshpass is not installed
   ansible.builtin.debug:
      msg: "sshpass is not installed on the local machine. Please install it before continuing."
   when: sshpass_present.failed

 - name: Ensure passlib is installed
   delegate_to: localhost
   register: passlib_present
   ansible.builtin.pip:
      name: passlib
      state: present

 - name: Report if passlib is not installed
   ansible.builtin.debug:
      msg: "passlib is not installed on the local machine. Please install it before continuing."
   when: passlib_present.failed

 - name: Save previous SSH user for later restoration
   ansible.builtin.set_fact:
      ansible_user_to_restore: "{{ ansible_user | d(lookup('env', 'USER')) }}"

 - name: Reauthenticate as root
   ansible.builtin.set_fact:
      ansible_user: root
      ansible_ssh_pass: "{{ bootstrap_pw }}"

 - name: Print user IDs after user-fallback
   ansible.builtin.debug:
      verbosity: 1
      msg: |-
         ansible_port: {{ ansible_port | d('unset') }};
         ansible_user: {{ ansible_user | d('unset') }};
         remote_user: {{ remote_user | d('unset') }}

 - name: Reset connection
   ansible.builtin.include_tasks: reset_connection.yaml
