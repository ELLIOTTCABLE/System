 # code: language=ansible
 - name: Check for sshpass on local machine
   delegate_to: localhost
   register: sshpass_present
   ansible.builtin.raw: which sshpass
   check_mode: false
   changed_when: false
   failed_when: sshpass_present.rc > 0

 - name: Report if sshpass is not installed
   ansible.builtin.debug:
      msg: "sshpass is not installed on the local machine. Please install it before continuing."
   when: sshpass_present.failed

 - name: Ensure passlib is installed
   delegate_to: localhost
   register: passlib_present
   ansible.builtin.pip:
      name: passlib
      state: present

 - name: Report if passlib is not installed
   ansible.builtin.debug:
      msg: "passlib is not installed on the local machine. Please install it before continuing."
   when: passlib_present.failed

 - name: Save previous SSH details for later restoration
   ansible.builtin.set_fact:
      ansible_user_to_restore: "{{ ansible_user | d(lookup('env', 'USER')) }}"
      ansible_port_to_restore: "{{ ansible_port }}"

 - name: Test for configured SSH port availability w/ netcat
   delegate_to: localhost
   ansible.builtin.command: nc -z -w5 {{ inventory_hostname }} {{ ansible_port }}
   register: nctest
   failed_when: nctest.stdout.find('failed') != -1
   changed_when: never
   ignore_errors: true

 # Set port to new port if connection success
 - name: Fallback to default SSH port
   ansible.builtin.set_fact:
      ansible_port: 22
   when: nctest.failed

 - name: Reauthenticate as root
   ansible.builtin.set_fact:
      ansible_user: root
      ansible_ssh_pass: "{{ bootstrap_pw }}"

 - name: Reset connection
   ansible.builtin.include_tasks: reset_connection.yaml

 - name: Print user IDs again before waiting for SSH comeup
   ansible.builtin.debug:
      verbosity: 1
      msg: |
         ansible_user: {{ ansible_user | d('unset') }};
         remote_user: {{ remote_user | d('unset') }}

 - name: Wait for sshd on remote host to come up
   ansible.builtin.wait_for_connection:
      sleep: 10
      timeout: 360

 - name: Gather facts over root-SSH
   ansible.builtin.setup:

 - name: Run HTSALSWA 'requirements' role for actual setup
   ansible.builtin.include_tasks:
      file: ../../../Vendor/HTSALSWA/roles/requirements/tasks/main.yml

 - name: Reauthenticate as normal admin user
   ansible.builtin.set_fact:
      ansible_user: "{{ ansible_user_to_restore }}"
      ansible_ssh_pass: "" # unset password

 - name: Reset connection
   ansible.builtin.include_tasks: reset_connection.yaml

 - name: Print 'after' values for user IDs
   ansible.builtin.debug:
      verbosity: 1
      msg: |-
         ansible_user: {{ ansible_user | d('unset') }};
         remote_user: {{ remote_user | d('unset') }}
