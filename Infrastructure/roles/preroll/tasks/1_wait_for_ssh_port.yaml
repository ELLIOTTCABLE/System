# code: language=ansible

 - tags:
    - always
    - connection-fallback
   block:

    - ansible.builtin.debug:
         verbosity: 1
         var: ssh_port_retry_count

    - ansible.builtin.set_fact:
         ssh_port_retry_count: "{{ ((ssh_port_retry_count | default(0)) | int) + 1 }}"

    - ansible.builtin.set_fact:
         main_ipv4_address: "{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}"

    - name: "Test for (configured) SSH port availability w/ netcat ({{ ansible_port }})"
      delegate_to: localhost
      ansible.builtin.command: nc -z -w2 {{ main_ipv4_address }} {{ ansible_port }}
      register: ssh_port_nctest
      changed_when: false
      ignore_errors: true

    - name: Test default SSH port instead
      when: ssh_port_nctest.failed
      tags:
       - always
       - connection-fallback
      block:

       - name: "Test for (default) SSH port availability w/ netcat (22)"
         delegate_to: localhost
         ansible.builtin.command: nc -z -w2 {{ main_ipv4_address }} 22
         register: default_port_nctest
         changed_when: false
         ignore_errors: true

       - name: Fallback to default SSH port
         when: not (default_port_nctest.failed)
         ansible.builtin.include_tasks:
            file: 2_fallback_to_default_ssh_port.yaml
            apply:
               tags:
                - always
                - connection-fallback

   rescue:
    - when: ssh_port_retry_count|int > 10
      ansible.builtin.fail:
         msg: "Giving up after too many retries (attempts: {{ ssh_port_retry_count }})"

    - name: Sleep for 30 seconds before retrying
      ansible.builtin.pause:
         seconds: 30

    - ansible.builtin.include_tasks: 1_wait_for_ssh_port.yaml
