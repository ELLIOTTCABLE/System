# :vim: set ft=ansible :

- name: Check for DATABASE_URL
  ansible.builtin.fail:
     msg: "DATABASE_URL is required"
  when: database_url is not defined or database_url == ""

  tags:
     - windmill.server
     - windmill.worker
     - windmill.config

- name: Print DATABASE_URL
  ansible.builtin.debug:
     msg: "DATABASE_URL: {{ database_url }}"

  tags:
     - windmill.server
     - windmill.worker
     - windmill.config

- name: Check for deno
  ansible.builtin.stat:
     path: "{{ deno_root }}/bin/deno"
  register: deno_stat

  tags:
     - windmill.worker
     - windmill.deno
     - windmill.prerequesites

- when: not deno_stat.stat.exists
  block:
     - name: Download deno-install.sh
       ansible.builtin.get_url:
          url: https://deno.land/x/install/install.sh
          dest: /tmp/deno-install.sh
          mode: 0500

     - name: Install deno with install.sh
       ansible.builtin.shell: /tmp/deno-install.sh
       environment:
          DENO_INSTALL: "{{ deno_root }}"
       become: true

       tags:
          - windmill.worker
          - windmill.deno
          - windmill.prerequesites

# TODO: Define changed/success using:
#     $ /lib/systemd/systemd-sysv-install is-enabled nginx
- name: Deactivate the nginx proxy
  ansible.builtin.command: dokku nginx:stop

  tags:
     - windmill.server
     - windmill.worker
     - windmill.proxy
     - dokku.proxy

- name: Create network {{ network_name }}
  dokku_network:
     name: "{{ network_name }}"

  tags:
     - windmill.server
     - windmill.worker
     - windmill.network
     - dokku.network

- name: Create app {{ server_name }}
  dokku_app:
     app: &server_name "{{ server_name }}"

  tags:
     - windmill.server
     - windmill.app
     - dokku.app

- name: Disable VHOST domain for {{ server_name }}
  dokku_domains:
     app: *server_name
     domains:
        - "{{ server_name }}.{{ dokku_hostname }}"
     state: disable
  #  state: absent

  tags:
     - windmill.server
     - windmill.domains
     - dokku.domains

- name: Configure environment for {{ server_name }}
  dokku_config:
     app: *server_name
     config:
        BASE_URL: "{{ base_url }}"
        RUST_LOG: info

        NUM_WORKERS: "0"
        DISABLE_SERVER: "false"
        METRICS_ADDR: "false"

  tags:
     - windmill.server
     - windmill.config
     - dokku.config

- name: Configure database environment for {{ server_name }}
  dokku_config:
     app: *server_name
     config:
        DATABASE_URL: "{{ database_url }}"
  when: database_url is defined

  tags:
     - windmill.server
     - windmill.config
     - dokku.config

- name: Create a persistent-storage for server config {{ server_name }}
  file:
     path: "/var/lib/dokku/data/storage/{{ server_name }}"
     state: directory
     owner: 0
     group: 0
     mode: 0700
  become: true

  tags:
     - windmill.server
     - windmill.config
     - windmill.storage
     - dokku.storage

- name: Create oauth.json for {{ server_name }}
  copy:
     force: false
     content: "{}"
     dest: "/var/lib/dokku/data/storage/{{ server_name }}/oauth.json"
     owner: 0
     group: 0
     mode: 0700
  become: true

  tags:
     - windmill.server
     - windmill.config
     - windmill.storage
     - dokku.storage

- name: Load existing oauth.json into a variable
  ansible.builtin.include_vars:
     file: "/var/lib/dokku/data/storage/{{ server_name }}/oauth.json"
     name: oauth_json

- name: Configure bind-mount for oauth.json for {{ server_name }}
  dokku_docker_options:
     app: *server_name
     phase: deploy
     option: "--mount type=bind,source=/var/lib/dokku/data/storage/{{ server_name }}/oauth.json,target=/usr/src/app/oauth.json,readonly"

  tags:
     - windmill.server
     - windmill.config
     - windmill.storage
     - dokku.storage

#   dokku_storage:
#      app: *server_name
#      mounts:
#         - "/var/lib/dokku/data/storage/{{ server_name }}:/tmp/windmill/cache"
#      create_host_dir: true

#      # TODO: This needs its permissions fixed, probably?
#      # <https://dokku.com/docs/advanced-usage/persistent-storage#creating-storage-directories>
#      user: 1001
#      group: 1001

- name: Attach server to network {{ network_name }}
  dokku_network_property:
     app: "{{ server_name }}"
     property: attach-post-deploy
     value: "{{ network_name }}"

  tags:
     - windmill.server
     - windmill.network
     - dokku.network

- name: Configure caddy as the proxy for {{ server_name }}
  ansible.builtin.command: dokku proxy:set {{ server_name }} caddy

  tags:
     - windmill.server
     - windmill.proxy
     - dokku.proxy

# `reverse_proxy /* http://windmill_server:8000`
- name: Configure caddy-docker-proxy labels for {{ server_name }}
  dokku_docker_options:
     app: *server_name
     phase: deploy
     option: >-
        --label=caddy='{{ server_domain }}'
        --label=caddy.2_reverse_proxy={%raw%}'/* {{upstreams http 8000}}'{%endraw%}

  tags:
     - windmill.server
     - windmill.proxy
     - dokku.proxy

- name: Pull and deploy {{ server_name }}
  dokku_image:
     app: *server_name
     image: ghcr.io/windmill-labs/windmill:main

  tags:
     - windmill.server
     - windmill.image
     - dokku.image

- name: Create app {{ worker_name }}
  dokku_app:
     app: &worker_name "{{ worker_name }}"

  tags:
     - windmill.worker
     - windmill.app
     - dokku.app

- name: Disable VHOST domain for {{ worker_name }}
  dokku_domains:
     app: *worker_name
     domains:
        - "{{ worker_name }}.{{ dokku_hostname }}"
     state: disable

  tags:
     - windmill.worker
     - windmill.domains
     - dokku.domains

- name: Configure environment for {{ worker_name }}
  dokku_config:
     app: *worker_name
     config:
        BASE_URL: "{{ base_url }}"
        RUST_LOG: info

        NUM_WORKERS: "1"
        DISABLE_SERVER: "true"
        KEEP_JOB_DIR: "false"
        METRICS_ADDR: "false"

        DENO_PATH: "{{ deno_root }}/bin/deno"
        PYTHON_PATH: "{{ python_path }}"

  tags:
     - windmill.worker
     - windmill.config
     - dokku.config

- name: Configure database environment for {{ worker_name }}
  dokku_config:
     app: *worker_name
     config:
        DATABASE_URL: "{{ database_url }}"
  when: database_url is defined

  tags:
     - windmill.worker
     - windmill.config
     - dokku.config

- name: Create a dependency-cache for {{ worker_name }}
  dokku_storage:
     app: *worker_name
     mounts:
        - "/var/lib/dokku/data/storage/{{ worker_name }}-dependency-cache:/tmp/windmill/cache"
     create_host_dir: true

     # TODO: This needs its permissions fixed, probably?
     # <https://dokku.com/docs/advanced-usage/persistent-storage#creating-storage-directories>
     user: 1001
     group: 1001

  become: true

  tags:
     - windmill.worker
     - windmill.storage
     - dokku.storage

- name: Attach worker to network {{ network_name }}
  dokku_network_property:
     app: "{{ worker_name }}"
     property: attach-post-create
     value: "{{ network_name }}"

  tags:
     - windmill.worker
     - windmill.network
     - dokku.network

- name: Disable the proxy for {{ worker_name }}
  ansible.builtin.command: dokku proxy:disable {{ worker_name }}

  tags:
     - windmill.worker
     - windmill.proxy
     - dokku.proxy

- name: Pull and deploy {{ worker_name }}
  dokku_image:
     app: *worker_name
     image: ghcr.io/windmill-labs/windmill:main

  tags:
     - windmill.worker
     - windmill.image
     - dokku.image

- name: Scale {{ worker_name }}
  dokku_ps_scale:
     app: "{{ worker_name }}"
     scale:
        web: "{{ worker_count }}"

  tags:
     - windmill.worker
     - windmill.scale
     - dokku.scale

- name: Create app {{ lsp_name }}
  dokku_app:
     app: &lsp_name "{{ lsp_name }}"

  tags:
     - windmill.lsp
     - windmill.app
     - dokku.app

- name: Disable VHOST domain for {{ lsp_name }}
  dokku_domains:
     app: *lsp_name
     domains:
        - "{{ lsp_name }}.{{ dokku_hostname }}"
     state: disable

  tags:
     - windmill.lsp
     - windmill.domains
     - dokku.domains

- name: Ensure default port mapping doesn't exist for {{ lsp_name }}
  dokku_ports:
     app: "{{ lsp_name }}"
     mappings:
        - http:80:5000
     state: absent
  tags:
     - windmill.lsp
     - windmill.proxy
     - dokku.proxy

- name: Proxy ports for {{ lsp_name }}
  dokku_ports:
     app: "{{ lsp_name }}"
     mappings:
        - http:3001:3001
  tags:
     - windmill.lsp
     - windmill.proxy
     - dokku.proxy

- name: Configure caddy as the proxy for {{ lsp_name }}
  ansible.builtin.command: dokku proxy:set {{ lsp_name }} caddy

  tags:
     - windmill.lsp
     - windmill.proxy
     - dokku.proxy

- name: Configure caddy-docker-proxy labels for {{ lsp_name }}
  dokku_docker_options:
     app: *lsp_name
     phase: deploy
     option: >-
        --label=caddy='{{ server_domain }}'
        --label=caddy.1_reverse_proxy={%raw%}'/ws/* {{upstreams http 3001}}'{%endraw%}

  tags:
     - windmill.lsp
     - windmill.proxy
     - dokku.proxy

- name: Pull and deploy {{ lsp_name }}
  dokku_image:
     app: *lsp_name
     image: ghcr.io/windmill-labs/windmill-lsp:latest

  tags:
     - windmill.lsp
     - windmill.image
     - dokku.image

- name: Activate the caddy proxy
  ansible.builtin.command: dokku caddy:start
  register: caddy_start
  changed_when: '"Started" in caddy_start.stdout'

  tags:
     - windmill.server
     - windmill.worker
     - windmill.proxy
     - dokku.proxy
