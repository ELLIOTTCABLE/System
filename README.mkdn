Notes
-----
Run before using home/.gitignore:

    $ git config --global core.excludesfile ~/.gitignore

----

The Z Shell configuration uses `zplug`, which needs to be installed separately (it thereafter
updates itself). The `.zshrc` will automate this the first time you run the terminal.

----

rbenv, nodenv, etc must be installed via Homebrew, along with their plugins:

    brew install rbenv rbenv-use ruby-build

    rbenv install 2.4                                    # Or whatever,

    brew tap nodenv/nodenv
    brew install                                                                  \
       nodenv node-build                                                          \
       nodenv-package-rehash node-build-update-defs nodenv-aliases                \
       nodenv-package-json-engine nodenv-npm-migrate

    nodenv update-version-defs                           # update available versions
    nodenv install 8.1.4                                 # install latest one blah blah,
    nodenv global 8                                      # yadda yadda

----

Some Vim plugins require extra setup:

 - Deoplete requires Python3 be installed and set up, that the appropriate Python package be
   installed, and that its update command be executed:

        brew install python3
        pip3 install --upgrade neovim
        nvim +UpdateRemotePlugins +q

 - CoffeeTags requires the `coffeetags` gem to be installed globally (beware `rvm`!):

        brew gem install coffeetags

 - `tern_for_vim`, supporting JavaScript in SuperTab/Deoplete, requires some setup:

        cd ~/.local/share/nvim/plugged/tern_for_vim
        npm i

 - color_coded requires compilation (and note that it will *fail* if the installed `vim` included
   luajit. I keep forgetting this fact somehow.):

        cd ~/.vim/bundle/color_coded
        (mkdir build; \
           cd build && cmake .. && \
           make && make install; \
           make clean && make clean_clang)

 - Command-T requires compilation; and this must be done against the same version of Ruby that the
   current Vim is compiled against: (Check both MacVim and command-line `vim`!)
   `:ruby puts "#{RUBY_VERSION}-p#{RUBY_PATCHLEVEL}"`. Re-build both Vims with the same Ruby; and
   then `rvm` (or similar) to that Ruby to build Command-T. (More information is available [in the
   docs.][command-t]

        cd ~/.vim/bundle/command-t/ruby/command-t
        ruby extconf.rb
        make

 - `sparkup` [has to have its vim docs re-generated][sparkup]:

        cd ~/.vim/bundle/sparkup
        make vim-pathogen

   [command-t]: <https://github.com/wincent/Command-T>
   [sparkup]: <https://github.com/rstacruz/sparkup/blob/master/vim/README.txt>

 - IPython-notebook-extensions needs some config to be configured, and I haven't figured out how to
   abstract it out, so I just `.gitignore`'d it:

        cd ~/.jupyter/IPython-notebook-extensions
        ./install.py install

   (This may need to be ‘fixed’ afterwards, restoring the symlinks in `~/.jupyter`. This should be
   enough: `git checkout extensions nbextensions templates`, or similar.)

----

The Terminal preferences (hotkeys etc) require Karabiner and Seil be installed, and that the fonts
from the `Extras/` directory also be installed. *After* all of those are installed, the
configurations can be symlinked from my Dropbox:

    ln -s '~/Documents/Dropbox/Library/karabiner.private.xml' '/Users/ec/Library/Application Support/Karabiner/'
    ln -s '~/Documents/Dropbox/Library/com.apple.Terminal.plist' '~/Library/Preferences/'
    ln -s '~/Documents/Dropbox/Library/GlobalPreferences.plist' \
       '~/Library/Preferences/.GlobalPreferences.plist'

(May require existing files be removed, or directories be created, first.)
