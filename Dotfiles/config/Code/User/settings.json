// vim: ft=jsonc
{
   "workbench.hover.delay": 100,
   "extensions.ignoreRecommendations": true,

   // Application-scope
   "telemetry.telemetryLevel": "error",

   "settingsSync.ignoredSettings": [],
   "settingsSync.ignoredExtensions": ["ms-vscode.mono-debug", "icrawl.discord-vscode"],
   "window.nativeTabs": true,
   "window.newWindowDimensions": "inherit",
   "window.openWithoutArgumentsInNewWindow": "on",
   "terminal.integrated.persistentSessionScrollback": 1000,
   "security.workspace.trust.untrustedFiles": "open",
   "window.confirmBeforeClose": "keyboardOnly",

   // Basics
   // ======
   "editor.tabSize": 3,
   "editor.wrappingIndent": "deepIndent",
   "editor.wordWrapColumn": 120,
   "editor.rulers": [90, 70, 80, 100],
   "editor.copyWithSyntaxHighlighting": false,
   "editor.find.globalFindClipboard": true,
   "editor.suggest.shareSuggestSelections": true,

   "workbench.startupEditor": "welcomePageInEmptyWorkbench",
   "editor.renderLineHighlight": "all",
   "breadcrumbs.enabled": true,

   "files.autoSave": "onFocusChange",
   "files.insertFinalNewline": true,
   "files.trimFinalNewlines": true,

   // "editor.fontFamily": "'Iosevka Nerd Font', monospace",
   "editor.fontFamily": "'Fira Code', monospace",
   "editor.fontLigatures": "'cv04', 'ss01', 'cv13', 'onum', 'ss04', 'ss09', 'ss06', 'calt'",
   "editor.codeLensFontFamily": "'Iosevka Nerd Font', monospace",
   "terminal.integrated.fontFamily": "Fantasque Sans Mono",

   "workbench.fontAliasing": "auto",
   "explorer.decorations.colors": false,
   "editor.fontSize": 14,
   "editor.cursorStyle": "underline-thin",
   "terminal.integrated.cursorBlinking": true,

   // Vim keybindings
   // ===============
   // (Application-scope)
   "vim.normalModeKeyBindingsNonRecursive": [
      // See: <https://github.com/VSCodeVim/Vim/issues/8574#issuecomment-1715573738>
      {
         "before": ["<C-p>"],
         "commands": ["workbench.action.quickOpen"]
      },

      {
         // Trigger "Setting Toggle" extension to enable/disable ligatures
         "before": ["<leader>", "l"],
         "commands": ["extension.toggle_s1"]
      },

      {
         "before": ["g", "q", "q"],
         "commands": ["rewrap.rewrapComment"]
      },

      {
         "before": ["<leader>", "r"],
         "commands": ["editor.action.rename"]
      },

      {
         "before": ["K"],
         "commands": ["editor.action.showHover"]
      },

      // ### Git-related maps
      {
         "before": ["]", "h"],
         "commands": ["workbench.action.editor.nextChange"]
      },
      {
         "before": ["[", "h"],
         "commands": ["workbench.action.editor.previousChange"]
      },
      {
         "before": ["g", "h"],
         "commands": ["editor.action.dirtydiff.next"]
      },
      {
         "before": ["g", "H"],
         "commands": ["editor.action.dirtydiff.previous"]
      },
      {
         "before": ["<leader>", "h", "s"],
         "commands": ["git.stageSelectedRanges"]
      }

      // ### Terminal-mappings
      // (See also: keybinds.json)
   ],

   // (Non-appliaction-scope)
   "terminal.integrated.commandsToSkipShell": [
      "workbench.action.focusRightGroup",
      "workbench.action.focusLeftGroup",
      "workbench.action.focusAboveGroup",
      "workbench.action.focusBelowGroup"
   ],

   // Other vim
   // ==========
   "vim.easymotion": true,
   "vim.incsearch": true,
   "vim.useSystemClipboard": true,
   "vim.useCtrlKeys": true,
   "vim.hlsearch": true,
   "vim.leader": "<space>",
   "vim.handleKeys": {
      "<C-f>": false
   },

   // Navigation & search
   // ===================
   "explorer.sortOrder": "mixed",
   "search.smartCase": true,
   "search.useGlobalIgnoreFiles": true,

   // Specific languages and features
   // ===============================
   // ### Filetypes and file-specific settings
   "files.associations": {
      "dune-project": "dune",
      "*.locked": "ocaml.opam",
      "vimrc": "viml"
   },

   "files.watcherExclude": {
      "**/_build/**": true,
      "**/_esy/**": true,
      "**/_opam/**": true,
      "**/*.bs.js": true,
      "**/esy.lock/**": true,
      "**/lib/bs/**": true,
      "**/lib/js/**": true,
      "**/lib/ocaml/**": true,
      "**/rust/target/**": true
   },

   // ### Diffs
   "diffEditor.renderIndicators": false,

   // ### Settings-editor
   "workbench.settings.useSplitJSON": true,

   // ### Terminal & debugger
   "debug.inlineValues": "auto",
   "terminal.integrated.confirmOnExit": "hasChildProcesses",
   "terminal.integrated.shell.windows": "cmd.exe",
   "terminal.integrated.shellArgs.windows": ["/K", "C:\\tools\\Cmder\\vendor\\init.bat"],

   // ### Git
   "git.alwaysShowStagedChangesResourceGroup": true,
   "git.autofetch": true,
   "git.enableCommitSigning": true,
   "git.postCommitCommand": "push",
   "gitlens.blame.ignoreWhitespace": true,
   "gitlens.codeLens.authors.command": "gitlens.showQuickCommitDetails",
   "gitlens.currentLine.scrollable": false,
   "gitlens.hovers.annotations.over": "annotation",
   "gitlens.advanced.messages": {
      "suppressLineUncommittedWarning": true
   },

   // ### Auto-formatting
   "formattingToggle.affects": [
      "editor.formatOnPaste",
      "editor.formatOnSave",
      "editor.formatOnType"
   ],
   "editor.formatOnPaste": true,
   "editor.formatOnSave": true,
   "editor.formatOnType": true,

   // ### Prettier
   "prettier.printWidth": 90,
   "prettier.tabWidth": 3,
   "prettier.singleQuote": true,
   "prettier.trailingComma": "all",
   "prettier.bracketSpacing": true,
   "prettier.semi": false,
   "prettier.ignorePath": ".prettierignore",
   "[json]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
   },
   "[javascript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
   },

   // ### ESLint
   "eslint.lintTask.enable": true,

   // ### Rewrap (comment-wrapping)
   "rewrap.autoWrap.enabled": false,
   "rewrap.wholeComment": false,

   // Using Vim mappings, above.
   "gitlens.keymap": "none",

   // Mimic Vim's trailing-whitespace behaviour
   "emptyIndent.removeIndent": true,
   "emptyIndent.highlightIndent": true,

   // Indent rainbow
   "indentRainbow.ignoreErrorLanguages": ["ocaml", "ocaml.interface", "dune"],

   // ### Setting Toggle
   "toggle.setting1Title": "editor.fontLigatures",
   "toggle.iconEnabled": false,

   // ### HTML
   "html.format.endWithNewline": true,
   "html.format.maxPreserveNewLines": 2,
   "html.format.wrapLineLength": 100,

   // ### ReasonML
   "reason.diagnostics.tools": ["merlin", "bsb"],
   "reason.codelens.enabled": true,
   "reason.format.width": 90,

   // ### C#, ASP.NET, etc
   "omnisharp.useGlobalMono": "always",
   "omnisharp.loggingLevel": "debug",
   "razor.languageServer.debug": true,

   // Other extensions and non-language-specific features
   // ==================================================
   // ### Leetcode
   "leetcode.hint.configWebviewMarkdown": false,
   "leetcode.showDescription": "Both",
   "leetcode.defaultLanguage": "javascript",
   "leetcode.enableStatusBar": false,
   "leetcode.hint.commentDescription": false,
   "leetcode.hint.setDefaultLanguage": false,
   "leetcode.hint.commandShortcut": false,
   "leetcode.hideSolved": true,

   // ### TabNine
   "tabnine.experimentalAutoImports": true,
   "tabnine.receiveBetaChannelUpdates": true,

   // ### Live Share
   "liveshare.guestApprovalRequired": true,
   "liveshare.allowGuestDebugControl": true,
   "liveshare.allowGuestTaskControl": true,
   "liveshare.focusBehavior": "prompt",
   "liveshare.joinDebugSessionOption": "Prompt",
   "liveshare.languages.allowGuestCommandControl": true,
   "liveshare.launcherClient": "visualStudioCode",
   "liveshare.notebooks.allowGuestExecuteCells": true,
   "liveshare.presence": true,
   "liveshare.publishWorkspaceInfo": true,
   "liveshare.showInStatusBar": "whileCollaborating",

   // ### Finally, don't commit changes below this line:

   // ... and anything after this, was added programmatically!
}
