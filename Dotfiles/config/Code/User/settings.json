// vim: ft=jsonc
{
   "extensions.ignoreRecommendations": true,

   // Application-scope
   // =================
   "telemetry.telemetryLevel": "error",
   "redhat.telemetry.enabled": false,

   "settingsSync.ignoredSettings": [],
   "settingsSync.ignoredExtensions": ["ms-vscode.mono-debug", "icrawl.discord-vscode"],
   "window.newWindowDimensions": "inherit",
   "window.openWithoutArgumentsInNewWindow": "on",
   "terminal.integrated.persistentSessionScrollback": 1000,
   "security.workspace.trust.untrustedFiles": "open",
   "window.confirmBeforeClose": "keyboardOnly",

   "window.autoDetectColorScheme": true,

   // Basics
   // ======
   "editor.tabSize": 3,
   "editor.wrappingIndent": "deepIndent",
   "editor.wordWrapColumn": 120,
   "editor.rulers": [72, 80, 100, 120],
   "editor.copyWithSyntaxHighlighting": false,
   "editor.suggest.shareSuggestSelections": true,

   "files.autoSave": "onFocusChange",
   "files.insertFinalNewline": true,
   "files.trimFinalNewlines": true,

   "editor.accessibilitySupport": "off",

   // Appearance
   // ==========
   // ### Startup
   "workbench.startupEditor": "welcomePageInEmptyWorkbench",
   "workbench.editor.empty.hint": "hidden",

   // ### Global layout
   "workbench.activityBar.location": "bottom",
   "workbench.layoutControl.enabled": true,

   "breadcrumbs.enabled": true,
   "workbench.editor.showTabs": "single",

   "editor.minimap.maxColumn": 72,
   "editor.minimap.showSlider": "always",
   "editor.minimap.side": "left",

   "workbench.hover.delay": 100,

   "window.customTitleBarVisibility": "never",
   "window.titleBarStyle": "native",

   "custom-ui-style.electron": {
      // Make the window titlebar-less on macOS
      "frame": false,
      "titleBarStyle": "hiddenInset",
      "trafficLightPosition": {
         "x": 7,
         "y": 8
      }
   },

   "custom-ui-style.stylesheet": {
      // Lowers command-palette etc to be more centered
      ".quick-input-widget": {
         "top": "25vh !important"
      },

      // Adjust titlebar sizes to match macOS traffic-lights. (Not working.)
      // ".mac.monaco-workbench .title": {
      //    "height": "25px !important",
      //    "font-size": "14px !important"
      // },
      // ".mac.monaco-workbench .part.sidebar .title .title-label": {
      //    "line-height": "29px !important"
      // },

      // Shift over the sidebar title to make room for the macOS traffic-lights
      ".mac.monaco-workbench .part.sidebar > .title": {
         "padding-left": "0px !important"
      },
      ".mac.monaco-workbench .part.sidebar > .title > .title-label": {
         // Yes, a slightly different number seems to work better here.
         "padding-left": "67px !important"
      },
      ".mac.nosidebar.monaco-workbench .part.editor .split-view-view.visible .title .title-label": {
         "padding-left": "66px !important"
      },
      ".mac.nosidebar.monaco-workbench .part.editor .split-view-view.visible ~ .split-view-view.visible .title .title-label": {
         "padding-left": "20px !important"
      },

      // Custom fonts for various highlight-groups
      ".mtk5": {
         // Comments
         "font-family": "'Monaspace Neon Var', 'Symbols Nerd Font', Arial"
      },

      ".ghost-text-decoration, .ghost-text-decoration-preview": {
         "font-family": "'Monaspace Krypton Var', 'Symbols Nerd Font', Arial",
         "font-weight": "200"
      }
   },

   // ### Explorer & side-bars
   "workbench.tree.enableStickyScroll": true,
   "explorer.sortOrder": "modified",
   "explorer.decorations.colors": false,

   "workbench.iconTheme": "vscode-icons",
   "vsicons.dontShowNewVersionMessage": true,

   "explorer.openEditors.visible": 20,

   "workspaceExplorer.workspaceStorageDirectory": "/Users/ec/Library/System/Dotfiles/config/Code/User/SavedWorkspaces",

   // ### Status-bar
   "gitlens.statusBar.enabled": false,
   "leetcode.enableStatusBar": false,
   "liveshare.showInStatusBar": "whileCollaborating",
   "peacock.showColorInStatusBar": false,

   // ### Fonts & type
   "editor.fontSize": 14,
   "editor.codeLensFontSize": 9,
   "terminal.integrated.fontSize": 14,

   // Download the symbols from:
   //    <https://github.com/ryanoasis/nerd-fonts/releases/latest/download/NerdFontsSymbolsOnly.zip>
   // "editor.fontFamily": "'Fira Code', Arial",
   // "editor.fontLigatures": "'cv04', 'ss01', 'cv13', 'onum', 'ss04', 'ss09', 'ss06', 'calt'",
   "editor.fontFamily": "'Monaspace Neon Var', 'Symbols Nerd Font', Arial",
   "editor.fontVariations": "'wght' 375",

   "editor.fontLigatures": "'calt', 'ss01', 'ss02', 'ss03', 'ss04', 'ss05', 'ss06', 'ss07', 'ss08', 'ss09', 'liga'",

   "terminal.integrated.fontFamily": "Fantasque Sans Mono",
   "terminal.integrated.fontLigatures.enabled": true,
   // "terminal.integrated.fontLigatures.featureSettings": "'calt' 'ss03' fixme' on",

   "editor.codeLensFontFamily": "'Input Nerd Font', Arial",
   "editor.inlayHints.fontFamily": "'Monaspace Krypton Var', 'Symbols Nerd Font', Arial",
   "editor.inlayHints.fontSize": 10,
   "editor.inlineSuggest.fontFamily": "'Monaspace Krypton Var', 'Symbols Nerd Font', Arial",
   "errorLens.fontFamily": "'Monaspace Krypton Var', 'Symbols Nerd Font', Arial",

   "disableLigatures.mode": "Line",

   // ### Cursor & editor-lines appearance
   "editor.stickyScroll.enabled": true,
   "notebook.stickyScroll.enabled": true,

   "editor.lineNumbers": "interval",
   "editor.renderLineHighlight": "all",
   "editor.renderFinalNewline": "dimmed",

   "editor.cursorStyle": "underline-thin",

   "vim.cursorStylePerMode.insert": "line",
   "vim.cursorStylePerMode.normal": "block-outline",
   "vim.cursorStylePerMode.replace": "underline",
   "vim.cursorStylePerMode.visual": "block-outline",
   "vim.cursorStylePerMode.visualblock": "block-outline",
   "vim.cursorStylePerMode.visualline": "block-outline",

   "terminal.integrated.cursorBlinking": true,

   // ### Misc. editor appearance
   "editor.codeLens": true,
   "editor.unicodeHighlight.invisibleCharacters": false,
   "editor.inlineSuggest.enabled": true,
   "editor.inlayHints.enabled": "onUnlessPressed",

   "editor.guides.bracketPairs": "active",

   // ### Indentation appearance
   "editor.renderWhitespace": "none",
   "workbench.colorCustomizations": {
      "[*Light*][*Bright*]": {
         "editorWhitespace.foreground": "#00000019"
      },
      "editorWhitespace.foreground": "#FFFFFF19"
   },

   // ### Indentation appearance
   "editor.guides.indentation": false,
   "indentRainbow.colorOnWhiteSpaceOnly": true,

   "indentRainbow.ignoreErrorLanguages": [
      "ansible",
      "compose",
      "dhall",
      "diff",
      "dune",
      "dune-project",
      "dune-workspace",
      "log",
      "markdown",
      "ocaml",
      "ocaml.interface",
      "puppet",
      "reason",
      "reasonml",
      "yaml"
   ],

   // (Mimic Vim's trailing-whitespace behaviour)
   "editor.renderWhitespace": "trailing",
   "emptyIndent.removeIndent": true,
   "emptyIndent.highlightIndent": true,

   "emptyIndent.exclude": ["diff"],

   // ### Search appearance
   "vim.hlsearch": true,
   "vim.incsearch": true,
   "vim.highlightedyank.enable": true,

   "editor.occurrencesHighlight": "multiFile",

   // ### Gutter appearance
   "vim.showMarksInGutter": true,

   // ### Diffs appearance
   "diffEditor.renderIndicators": false,
   "diffEditor.hideUnchangedRegions.enabled": true,
   "diffEditor.experimental.showMoves": true,
   "diffEditor.experimental.useTrueInlineView": true,

   "multiDiffEditor.experimental.enabled": true,

   // ### Terminal & debugger appearance
   "debug.inlineValues": "auto",
   "debug.showVariableTypes": true,
   "terminal.integrated.defaultLocation": "editor",
   "terminal.integrated.stickyScroll.enabled": true,

   "terminal.integrated.gpuAcceleration": "on",
   "terminal.integrated.enableImages": true,
   "terminal.integrated.experimental.windowsUseConptyDll": true,

   "terminal.integrated.suggest.enabled": true,

   // ### Git & SCM appearance
   "git.alwaysShowStagedChangesResourceGroup": true,
   "gitlens.advanced.fileHistoryShowAllBranches": true,
   "gitlens.hovers.annotations.over": "annotation",
   "gitlens.hovers.autolinks.enabled": false,
   "gitlens.rebaseEditor.ordering": "asc",
   "gitlens.views.commitDetails.files.layout": "list",

   // ### Leetcode appearance
   "leetcode.showDescription": "Both",
   "leetcode.hint.configWebviewMarkdown": false,
   "leetcode.hint.commentDescription": false,
   "leetcode.hint.setDefaultLanguage": false,
   "leetcode.hint.commandShortcut": false,
   "leetcode.hideSolved": true,

   // ### ErrorLens appearance
   "errorLens.delayMode": "new",
   "errorLens.delay": 750,
   "errorLens.enableOnDiffView": true,
   "errorLens.excludeBySource": ["cSpell"],
   "errorLens.alignMessage": { "end": 120 },
   "errorLens.messageBackgroundMode": "message",
   "errorLens.borderRadius": "0.25em",
   "errorLens.editorHoverPartsEnabled": {
      "messageEnabled": true,
      "sourceCodeEnabled": true,
      "buttonsEnabled": true
   },
   "errorLens.followCursor": "allLinesExceptActive",
   "errorLens.gutterIconsEnabled": false,
   // "errorLens.gutterIconSet": "squareRounded",
   "errorLens.padding": "0.3em",
   "errorLens.enabledInMergeConflict": false,

   "errorLens.replace": [
      // rustc
      { "matcher": "(.*)\n`.*` on by default", "message": "$1" }
   ],

   "errorLens.excludeByMessage": [
      // rustc
      { "regex": "^unused variable: `.*`" },
      { "regex": "^unused imports?: .*" },
      { "regex": "^multiple fields are never read" }
   ],

   // Keybindings
   // ===========

   // ### Vim keybindings
   // (Application-scope)
   "vim.normalModeKeyBindingsNonRecursive": [
      // See: <https://github.com/VSCodeVim/Vim/issues/8574#issuecomment-1715573738>
      {
         "before": ["<C-p>"],
         "commands": ["workbench.action.quickOpen"]
      },

      {
         // Trigger "Setting Toggle" extension to enable/disable ligatures
         "before": ["<leader>", "l"],
         "commands": ["extension.toggle_s1"]
      },

      {
         "before": ["g", "q", "q"],
         "commands": ["rewrap.rewrapComment"]
      },

      {
         "before": ["<leader>", "r"],
         "commands": ["editor.action.rename"]
      },

      {
         "before": ["K"],
         "commands": ["editor.action.showHover"]
      },

      // ### Git-related maps
      {
         "before": ["]", "h"],
         "commands": ["workbench.action.editor.nextChange"]
      },
      {
         "before": ["[", "h"],
         "commands": ["workbench.action.editor.previousChange"]
      },
      {
         "before": ["g", "h"],
         "commands": ["editor.action.dirtydiff.next"]
      },
      {
         "before": ["g", "H"],
         "commands": ["editor.action.dirtydiff.previous"]
      },
      {
         "before": ["<leader>", "h", "s"],
         "commands": ["git.stageSelectedRanges"]
      }

      // ### Terminal-mappings
      // (See also: keybinds.json)
   ],

   // (Non-appliaction-scope)
   "terminal.integrated.commandsToSkipShell": [
      "workbench.action.focusRightGroup",
      "workbench.action.focusLeftGroup",
      "workbench.action.focusAboveGroup",
      "workbench.action.focusBelowGroup"
   ],

   "vim.leader": "<space>",
   "vim.useCtrlKeys": true,
   "vim.handleKeys": {
      // This resource is a godsend:
      //    <https://www.dreesnotes.com/software/2021/10/11/vim-ctrl-keys-on-vscode.html>
      // Can find available disables by searching this file for "use<":
      //    <https://github.com/VSCodeVim/Vim/blob/master/package.json>
      "<C-k>": false, // VScode's "leader"
      "<C-q>": false, // Quick navigation
      "<C-t>": false, // Goto symbol
      "<C-b>": false, // Toggle sidebar
      "<C-j>": false, // Toggle panel
      "<C-n>": false, // New file
      "<C-f>": false, // Find

      // Just noting these for my own sanity:
      // <C-q> Would be "close" on Windows, but column-select in vim would otherwise be <Ctrl-V> which is way more
      // disruptive on Windows
      "<C-q>": true,
      "<C-w>": true // Close window
   },

   "gitlens.keymap": "none",

   "vim.easymotion": true,
   "vim.useSystemClipboard": true,

   // Specific languages and features
   // ===============================

   // ### Filetypes and file-specific settings
   "files.associations": {
      "dune-project": "dune",
      "*.locked": "ocaml.opam",
      "vimrc": "viml"
   },

   "files.watcherExclude": {
      "**/_build/**": true,
      "**/_esy/**": true,
      "**/_opam/**": true,
      "**/.pytest_cache/**": true,
      "**/*.bs.js": true,
      "**/client_bs/src/gen/**": true,
      "**/esy.lock/**": true,
      "**/lib/bs/**": true,
      "**/lib/js/**": true,
      "**/lib/ocaml/**": true,
      "**/node_modules/**": true,
      "**/rust/target/**": true
   },

   "files.exclude": {
      "**/_build": true,
      "**/_esy": true,
      "**/_opam": true,
      "**/.pytest_cache": true,
      "**/*.bs.js": true,
      "**/client_bs/src/gen": true,
      "**/lib/bs": true,
      "**/lib/js": true,
      "**/lib/ocaml": true,
      "**/node_modules": true,
      "**/route_config/**.d": true
   },

   "search.exclude": {
      "**/.merlin": true,
      "**/*.bs.js": true,
      "**/composer.lock": true,
      "**/yarn.lock": true
   },

   // ### Terminal & debugger functionality
   "terminal.integrated.shellIntegration.enabled": true,
   "terminal.integrated.defaultProfile.windows": "Ubuntu (WSL)",

   // (seems to fix issues pasting into zsh-inside-WSL on Windows)
   "terminal.integrated.ignoreBracketedPasteMode": true,

   "terminal.integrated.scrollback": 100000,
   "terminal.integrated.confirmOnExit": "hasChildProcesses",
   "terminal.integrated.showExitAlert": false,

   "terminal.integrated.suggest.runOnEnter": "exactMatchIgnoreExtension",

   "terminal.integrated.profiles.windows": {
      "PowerShell": {
         "source": "PowerShell",
         "icon": "terminal-powershell"
      },
      "Command Prompt": {
         "path": [
            "${env:windir}\\Sysnative\\cmd.exe",
            "${env:windir}\\System32\\cmd.exe"
         ],
         "args": [],
         "icon": "terminal-cmd"
      },
      "Git Bash": {
         "source": "Git Bash"
      },
      "Ubuntu (WSL)": {
         "path": "C:\\WINDOWS\\System32\\wsl.exe",
         "args": ["-d", "Ubuntu"]
      }
   },

   // ### Navigation & search functionality
   "search.smartCase": true,
   "search.useGlobalIgnoreFiles": true,
   "search.searchEditor.reusePriorSearchConfiguration": true,

   // ### Vim functionality
   "vim.joinspaces": false,

   "vim.camelCaseMotion.enable": true,
   "vim.sneakReplacesF": true,
   "vim.sneakUseIgnorecaseAndSmartcase": true,
   "vim.targets.enable": true,

   "vim.replaceWithRegister": true,

   // ### Git & SCM functionality
   "git.autofetch": true,
   "git.detectSubmodulesLimit": 50,
   "git.enableCommitSigning": true,
   "git.postCommitCommand": "push",
   "git.blame.editorDecoration.enabled": true,
   "git.blame.statusBarItem.template": "${authorName} (${hashShort} ${authorDateAgo})",
   "git.blame.editorDecoration.template": "// ${subject} ⁓ ${authorName} (${authorDateAgo})",
   "gitlens.currentLine.enabled": false,
   "gitlens.currentLine.pullRequests.enabled": false,
   "gitlens.codeLens.authors.command": "gitlens.showQuickCommitDetails",

   "gitlens.advanced.messages": {
      "suppressLineUncommittedWarning": true
   },

   // ### GitHub-specific extensions
   "githubIssues.createInsertFormat": "url",
   "githubIssues.issueBranchTitle": "ec/i${issueNumber}",
   "githubIssues.workingIssueFormatScm": "${issueTitle}\n\n/fixes ${issueNumberLabel}",
   "githubPullRequests.remotes": ["origin", "upstream", "ec"],
   "githubPullRequests.defaultDeletionMethod.selectRemote": false,
   "githubPullRequests.fileListLayout": "flat",
   "githubPullRequests.focusedMode": "multiDiff",
   "githubPullRequests.pullBranch": "never",
   "githubPullRequests.terminalLinksHandler": "vscode",

   // ### AI & Copilot functionality
   "github.copilot.enable": {
      "*": false,
      "plaintext": true,
      "markdown": true,
      "scminput": false,
      "yaml": true
   },
   "github.copilot-labs.showTestGenerationLenses": true,

   // ### Leetcode functionality
   "leetcode.defaultLanguage": "javascript",

   // ### TabNine functionality
   "tabnine.experimentalAutoImports": true,
   "tabnine.receiveBetaChannelUpdates": true,

   // ### Live Share functionality
   "liveshare.guestApprovalRequired": true,
   "liveshare.allowGuestDebugControl": true,
   "liveshare.allowGuestTaskControl": true,
   "liveshare.focusBehavior": "prompt",
   "liveshare.joinDebugSessionOption": "Prompt",
   "liveshare.languages.allowGuestCommandControl": true,
   "liveshare.launcherClient": "visualStudioCode",
   "liveshare.notebooks.allowGuestExecuteCells": true,
   "liveshare.publishWorkspaceInfo": true,

   // ### Remote / SSH functionality
   "remote.SSH.path": "/Users/ec/.bin/ssh",

   // Formatting
   // ==========

   // ### Global formatting
   "formattingToggle.affects": [
      "editor.formatOnPaste",
      "editor.formatOnSave",
      "editor.formatOnType"
   ],
   "editor.formatOnPaste": true,
   "editor.formatOnSave": true,
   "editor.formatOnType": true,

   // ### Rewrap (comment-wrapping) formatting
   "rewrap.autoWrap.enabled": false,
   "rewrap.wholeComment": false,

   // ### Prettier formatting
   "prettier.printWidth": 90,
   "prettier.tabWidth": 3,
   "prettier.singleQuote": true,
   "prettier.trailingComma": "all",
   "prettier.bracketSpacing": true,
   "prettier.semi": false,
   "prettier.ignorePath": ".prettierignore",
   "[css][html][javascript][json][jsonc][typescript][typescriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
   },

   // ### ESLint formatting
   "eslint.lintTask.enable": true,

   // ### HTML formatting
   "html.format.maxPreserveNewLines": 2,
   "html.format.wrapLineLength": 100,

   "htmlhint.options": { "doctype-first": false },

   // ### OCaml formatting
   "[ocaml]": {
      "editor.defaultFormatter": "ocamllabs.ocaml-platform"
   },

   "vsicons.associations.files": [
      { "icon": "ocaml_intf", "extensions": ["mli"], "format": "svg" }
   ],

   // ### Shell / Bash / Zsh formatting
   "[shellscript]": {
      "editor.defaultFormatter": "foxundermoon.shell-format"
   },

   "shellformat.useEditorConfig": true,

   // ### SQL formatting
   "[sql]": {
      "editor.defaultFormatter": "dorzey.vscode-sqlfluff"
   },

   // ### YAML formatting
   "[yaml][ansible]": {
      "editor.defaultFormatter": "bluebrown.yamlfmt"
   },

   // Language-specific functionality
   // ===============================

   // ### OCaml functionality
   "ocaml.server.extraEnv": {
      "OCAMLLSP_HOVER_IS_EXTENDED": "true"
   },

   // ### C#, ASP.NET, etc functionality
   "[csharp]": {
      "editor.defaultFormatter": "csharpier.csharpier-vscode"
   },
   "omnisharp.useGlobalMono": "always",
   "FSharp.showProjectExplorerIn": "explorer",

   // --- ---- --- /!\ --- ---- ---
   // ... and anything after this, was added programmatically!
   // --- ---- --- \!/ --- ---- ---

   "ignore": "me"
}
