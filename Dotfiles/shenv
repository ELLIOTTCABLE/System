# Sourced by `.zshenv` and `.bash_profile` (instead of `.profile`) to setup environment-variables
# like `$PATH`. (This is an ugly hack.)
#
# See: <https://kb.iu.edu/d/abdy>

#echo '~/.shenv: $SHENV_EVALUATED = '\'"$SHENV_EVALUATED"\'
if [[ -z "$SHENV_EVALUATED" ]]; then
SHENV_EVALUATED='true'

if [[ "$DEBUG_PATH" == true ]]; then
   echo '~/.shenv (before): $PATH = '
   echo $PATH | tr ':' "\n" | nl
fi


# Remove or replace an element of $1
#
#   $1 name of the shell variable to set (e.g. 'PATH')
#   $2 the precise string to be removed/replaced
#   $3 the replacement string (use "" for removal)
function replace_el () {
   list="$(eval echo '$'"$1")"
   export $1="$(echo "$list" | tr ":" "\n" | sed "s:^$2\$:$3:; /^\$/d" | tr "\n" ":" | sed 's|:$||')"
}

function prepend_el () {
   replace_el "$1" "$2"
   list="$(eval echo '$'"$1")"
   export $1="$2:$list"
}

function append_el () {
   replace_el "$1" "$2"
   list="$(eval echo '$'"$1")"
   export $1="$list:$2"
}


# FIXME: The default path, with ~/.zshrc and ~/.profile disabled, seems to be `/usr/bin:/bin`. This
#        should be `/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin`, as it is for new accounts. I've
#        screwed up some configuration somewhere, but I have no idea where. I'm hard-coding this,
#        for now; but it needs to be tracked down and fixed. (AS OF MAVERICKS)
PATH="/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin"


export SYSTEM_OSX='Mac OS X'
export SYSTEM_TIGER='Mac OS X 10.4'
export SYSTEM_LEOPARD='Mac OS X 10.5'
export SYSTEM_SNOW_LEOPARD='Mac OS X 10.6'
export SYSTEM_LION='Mac OS X 10.7'
export SYSTEM_MOUNTAIN_LION='Mac OS X 10.8'
export SYSTEM_MAVERICKS='Mac OS X 10.9'
export SYSTEM_NIX='Linux'
export SYSTEM_CENTOS='Centos'
export SYSTEM_CENTOS5='Centos 5'
export SYSTEM_FEDORA='Fedora Core'
export SYSTEM_FEDORA4='Fedora Core 4'
export SYSTEM_ARCH='Arch Linux'
export SYSTEM_UNKNOWN='Unknown'


source "$HOME/.shenv.local"


if [[ $SYSTEM =~ $SYSTEM_OSX ]]; then
  export JAVA_HOME="/System/Library/Frameworks/JavaVM.framework/Home/"
 #export EC2_HOME="`/usr/local/bin/brew --prefix ec2-api-tools`"        # Slow.
  export AWS_HOME="$HOME/.ec2"
fi

# FIXME: bash-incompatible
#export EC2_PRIVATE_KEY="$(print $HOME/.ec2/pk-*.pem(N))"
#export EC2_CERT="$(print $HOME/.ec2/cert-*.pem(N))"

# Homebrew
if [[ $SYSTEM =~ $SYSTEM_OSX ]]; then
   # Hardcoding this; saves the startup cost of re-running this for every shell.
  #export HOMEBREW_PREFIX="$(brew --prefix)"
   export HOMEBREW_PREFIX="/usr/local"
   export HOMEBREW_CASK_OPTS='--fontdir=/Library/Fonts'
fi

# This is a *horrible* hack to get ahold of the default `$OPAM_SWITCH_PREFIX`.
eval "$(head -n2 ~/.opam/opam-init/variables.sh)"


# $PATH setup
# ===========
# NOTE: Be aware that `packages.zsh` is loaded *after* this, and thus several zsh packages (notably
# Nodenv and Rbenv) are going to prepend *all* of these, taking first-place in the lookup order.
if [[ $SYSTEM =~ $SYSTEM_OSX ]]; then
  prepend_el PATH "$HOMEBREW_PREFIX/bin"           #  6. < Homebrew
  prepend_el PATH "$HOMEBREW_PREFIX/opt/llvm/bin"  #  5. < Homebrew's llvm / clang

  append_el PATH "/Library/TeX/texbin"    # -5. > MacTeX
  append_el PATH "/usr/X11/bin"           # -4. > X11
fi
prepend_el PATH "$HOME/.bin"              #  4. < local binaries
prepend_el PATH "$HOME/.cargo/bin"        #  3. < Cargo (Rust) binaries
prepend_el PATH "$OPAM_SWITCH_PREFIX/bin" #  2. < OPAM local bin
prepend_el PATH "./node_modules/.bin"     #  1. < npm (local)

append_el PATH "$HOME/.bin/opam-default-switch-alias" # -3. < OPAM global bin (see note in README.)
append_el PATH "/usr/local/cuda/bin"      # -2. > CUDA
append_el PATH "$AWS_HOME/bin"            # -1. > EC2

export PATH


if [[ "$DEBUG_PATH" == true ]]; then
   echo '~/.shenv (after): $PATH = '
   echo $PATH | tr ':' "\n" | nl
fi


nodenv_plugin_path="$HOME/.zsh/modules/ELLIOTTCABLE/nodenv.plugin.zsh/nodenv.plugin.zsh"
if [[ -f "$nodenv_plugin_path" ]]; then
   source "$nodenv_plugin_path"

   if [[ "$DEBUG_PATH" == true ]]; then
      echo '~/.shenv (after nodenv.plugin.zsh): $PATH = '
      echo $PATH | tr ':' "\n" | nl
   fi
fi

rbenv_plugin_path="$HOME/.zsh/modules/ELLIOTTCABLE/rbenv.plugin.zsh/rbenv.plugin.zsh"
if [[ -f "$rbenv_plugin_path" ]]; then
   source "$rbenv_plugin_path"

   if [[ "$DEBUG_PATH" == true ]]; then
      echo '~/.shenv (after rbenv.plugin.zsh): $PATH = '
      echo $PATH | tr ':' "\n" | nl
   fi
fi

fi # [[ -z "$SHENV_EVALUATED" ]]
