# PS1='\h:\w \u\$ ' #Default

case "$COLOURIZE_AS" in
  "purple")
    ALERT_COLOUR=$GREEN
    ALERT_COLOUR_E=$GREEN_E
    ALERT_COLOUR_BOLD=$GREEN_BOLD
    ALERT_COLOUR_BOLD_E=$GREEN_BOLD_E
  ;;
  *)
    ALERT_COLOUR=$PURPLE
    ALERT_COLOUR_E=$PURPLE_E
    ALERT_COLOUR_BOLD=$PURPLE_BOLD
    ALERT_COLOUR_BOLD_E=$PURPLE_BOLD_E
  ;;
esac

function parse_git_dirty {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

PROMPT_COMMAND='
OLD_STATUS=$?

if [[ $(id -u) == 0 ]]; then
  NAME_PROMPT="${ALERT_COLOUR_BOLD}root${CLEAR_COLOUR}"
else
  NAME_PROMPT="${SYSTEM_COLOUR}\u${CLEAR_COLOUR}"
fi

git status &> /dev/null
if [[ $? == 1 ]]; then
  branch=$(git name-rev --always --no-undefined HEAD | sed -e "s/^HEAD //")
  tag=$(git name-rev --tags --always --no-undefined HEAD | sed -e "s/^HEAD //")
  
  if [[ $branch == "master" ]]; then
    GIT_BRANCH_PROMPT="$SYSTEM_COLOUR${branch}$(parse_git_dirty)$CLEAR_COLOUR"
  else
    GIT_BRANCH_PROMPT="$ALERT_COLOUR${branch}$(parse_git_dirty)$CLEAR_COLOUR"
  fi
  
  GIT_PROMPT="〈${GIT_BRANCH_PROMPT}${WHITE_BOLD} - ${SYSTEM_COLOUR}${tag}${WHITE_BOLD}〉"
else
  GIT_PROMPT=""
fi

( exit $OLD_STATUS )

if [[ $? == 0 ]]; then
  STATUS_PROMPT="${GREEN_E}➜${CLEAR_COLOUR_E}"
else
  STATUS_PROMPT="${RED_E}!${CLEAR_COLOUR_E}"
fi

PS1="\[${WHITE}〈${SYSTEM_COLOUR}\d${WHITE_BOLD} - ${SYSTEM_COLOUR}\t${WHITE}〉〈${NAME_PROMPT}${WHITE} - ${SYSTEM_COLOUR}\h${WHITE}〉〈${SYSTEM_COLOUR}\w/${WHITE}〉${GIT_PROMPT}\]\n${STATUS_PROMPT} "
'
export PROMPT_COMMAND
